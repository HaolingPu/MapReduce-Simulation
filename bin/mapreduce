#!/bin/bash
#
# lscount
#
# List files and folders, followed by a count

# Stop on errors, print commands
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x

# Sanity check command line options
usage() {
  echo "Usage: $0 (start|status|stop|restart)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "start")
    if pgrep -f mapreduce &> /dev/null; then
        echo "Error: mapreduce-manager is already running"
        exit 1
    fi
    echo "starting mapreduce ..."
    mkdir -p var/uploads
    mkdir -p var/log
    rm -f var/log/manager.log var/log/worker-6002.log var/log/worker-6001.log
    mapreduce-manager --host localhost --port 6000 --logfile var/log/manager.log &
    sleep 2  # give the Manager time to start
    mapreduce-worker --host localhost --port 6001 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6001.log &
    mapreduce-worker --host localhost --port 6002 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6002.log &
    ;;

  "status")
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "manager running"
        if pgrep -f mapreduce-worker &> /dev/null; then
            echo "worker running"
            exit 0 
        else
            echo "worker not running"
        fi 
    else
        echo "manager not running"
        if pgrep -f mapreduce-worker &> /dev/null; then
            echo "worker running"
        else
            echo "worker not running"
        fi 
    fi
    exit 1
    ;;

  "stop")
    echo "Stopping mapreduce ..."
    mapreduce-submit --shutdown --host localhost --port 6000 || true
    sleep 2  # give the Manager time to receive signal and send to Workers
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "killing mapreduce manager ..."
        pkill -f mapreduce-manager || true
    fi
    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "killing mapreduce worker ..."
        pkill -f mapreduce-worker || true
    fi
    ;;

  "restart")
    ./bin/mapreduce stop
    ./bin/mapreduce start
    ;;
  *)
esac
